Si corro el programa con el siguiente main:
int main() {
    list_t* l = listNew(TypeFAT32);
    fat32_t* f1 = new_fat32(); // <- malloc(sizeof(fat32_t)) 4 bytes
    *f1 = 10;
    fat32_t* f2 = new_fat32(); // <- malloc(sizeof(fat32_t)) 4 bytes
    *f2 = 30;

    print_lista(l);

    listAddFirst(l, f1);
    print_lista(l);

    listAddFirst(l, f2);
    print_lista(l);

    listDelete(l);
    rm_fat32(f1); // Libero 4 bytes
    rm_fat32(f2); // Libero 4 bytes
    return 0;
}


==4378== Memcheck, a memory error detector
==4378== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==4378== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==4378== Command: ./gen
==4378==
10
30
10
==4378==
==4378== HEAP SUMMARY:
==4378==     in use at exit: 0 bytes in 0 blocks
==4378==   total heap usage: 8 allocs, 8 frees, 1,104 bytes allocated
==4378==
==4378== All heap blocks were freed -- no leaks are possible
==4378==
==4378== For lists of detected and suppressed errors, rerun with: -s
==4378== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Si corro el programa con el siguiente main:
int main() {
    list_t* l = listNew(TypeFAT32);
    fat32_t* f1 = new_fat32(); // <- malloc(sizeof(fat32_t)) 4 bytes
    *f1 = 10;
    fat32_t* f2 = new_fat32(); // <- malloc(sizeof(fat32_t)) 4 bytes
    *f2 = 30;

    print_lista(l);

    listAddFirst(l, f1);
    print_lista(l);

    listAddFirst(l, f2);
    print_lista(l);

    listDelete(l);
    // rm_fat32(f1); // NO libero estos 4 bytes
    rm_fat32(f2); // Libero 4 bytes
    return 0;
}

==5294== Memcheck, a memory error detector
==5294== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==5294== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==5294== Command: ./gen
==5294==
10
30
10
==5294==
==5294== HEAP SUMMARY:
==5294==     in use at exit: 4 bytes in 1 blocks
==5294==   total heap usage: 8 allocs, 7 frees, 1,104 bytes allocated
==5294==
==5294== LEAK SUMMARY:
==5294==    definitely lost: 4 bytes in 1 blocks
==5294==    indirectly lost: 0 bytes in 0 blocks
==5294==      possibly lost: 0 bytes in 0 blocks
==5294==    still reachable: 0 bytes in 0 blocks
==5294==         suppressed: 0 bytes in 0 blocks
==5294== Rerun with --leak-check=full to see details of leaked memory
==5294==
==5294== For lists of detected and suppressed errors, rerun with: -s
==5294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
